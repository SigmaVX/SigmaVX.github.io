{"ast":null,"code":"// Background Color Options\nvar colors = [\"#413075\", \"#2E4172\", \"#582A72\", \"#AA9739\", \"#2E4172\", \"#A64050\", \"#A7AE43\", \"#3B3B7B\", \"#ff99ff\", \"#008060\", \"#ff944d\", \"#cc5200\", \"#ff9900\", \"#8080ff\", \"#996633\", \"#800000\", \"#0099cc\"]; // Our Images - Nature\n\nvar images = [\"./images/1.jpg\", \"./images/2.jpg\", \"./images/3.jpg\", \"./images/4.jpg\", \"./images/5.jpg\", \"./images/6.jpg\", \"./images/7.jpg\", \"./images/8.jpg\", \"./images/9.jpg\", \"./images/10.jpg\", \"./images/11.jpg\", \"./images/12.jpg\", \"./images/13.jpg\", \"./images/14.jpg\", \"./images/15.jpg\", \"./images/16.jpg\", \"./images/17.jpg\", \"./images/18.jpg\", \"./images/19.jpg\", \"./images/20.jpg\", \"./images/21.jpg\", \"./images/22.jpg\", \"./images/23.jpg\", \"./images/24.jpg\", \"./images/25.jpg\", \"./images/26.jpg\", \"./images/27.jpg\", \"./images/28.jpg\", \"./images/29.jpg\", \"./images/30.jpg\"]; // Randomized Array Of Images\n\nvar randomImages = images.sort(function (a, b) {\n  return 0.5 - Math.random();\n}); // Ser Variables for DOM Elements\n\nvar grid = document.getElementById(\"grid\");\nvar box1 = document.getElementById(\"box-1\");\nvar box2 = document.getElementById(\"box-2\");\nvar box3 = document.getElementById(\"box-3\");\nvar box4 = document.getElementById(\"box-4\");\nvar box5 = document.getElementById(\"box-5\");\nvar box6 = document.getElementById(\"box-6\"); // Image Array (For Loops)\n\nvar boxArray = [box1, box2, box3, box4, box5, box6]; // Track Our Index For Images\n\nvar count = 0; // Store Our Interval (So We Can Have Access)\n\nvar carousel; // Store Grid & Play State\n\nvar shuffleState = \"mixed\";\nvar playState = \"paused\"; // ============================================================================================================\n// There is a DRY way to do this code with a loop but it does not achieve the stagered effect I was looking for\n// ============================================================================================================\n// Set Initial Images\n\nvar loadStartImages = function loadStartImages() {\n  for (var i = 0; i < boxArray.length; i++) {\n    boxArray[i].style.backgroundImage = \"url(\".concat(randomImages[count + i], \")\"); // console.log(count);\n\n    count++;\n  }\n}; // Fade Out Current Images\n\n\nvar fadeOut = function fadeOut(box) {\n  box.setAttribute(\"class\", \"box fadeOut\");\n}; // Change Image Source While Hidden\n\n\nvar updateImages = function updateImages(box) {\n  box.style.visibility = \"hidden\";\n  box.style.backgroundImage = \"url(\".concat(randomImages[count], \")\"); // console.log(`Image Number: ${count}`);\n\n  count++; // console.log(`Updated Count: ${count}`);\n}; // Add Class For Animation\n\n\nvar updateClass = function updateClass(box) {\n  box.setAttribute(\"class\", \"box scaleIn\");\n  box.style.visibility = \"visible\";\n}; // Change Background Color\n\n\nvar changeBackground = function changeBackground() {\n  var colorPick = Math.floor(Math.random() * colors.length); // console.log(`Color Picked: ${colors[colorPick]}`);\n\n  grid.style.background = colors[colorPick];\n}; // Set Timers To Replace Images\n\n\nvar fullCycle = function fullCycle(box) {\n  setTimeout(function () {\n    return fadeOut(box);\n  }, 0);\n  setTimeout(function () {\n    return updateImages(box);\n  }, 3000);\n  setTimeout(function () {\n    return updateClass(box);\n  }, 4000);\n}; // Update Images On A Staggered Basis\n\n\nfunction cycleImages() {\n  // Check If All Images Are Used & Reshuffle\n  if (count >= randomImages.length - 1) {\n    randomImages = images.sort(function (a, b) {\n      return 0.5 - Math.random();\n    });\n    count = 0;\n    setTimeout(function () {\n      return fullCycle(box1);\n    }, 500);\n    setTimeout(function () {\n      return fullCycle(box2);\n    }, 1000);\n    setTimeout(function () {\n      return fullCycle(box3);\n    }, 1500);\n    setTimeout(function () {\n      return fullCycle(box4);\n    }, 2000);\n    setTimeout(function () {\n      return fullCycle(box5);\n    }, 2500);\n    setTimeout(function () {\n      return fullCycle(box6);\n    }, 3000);\n    changeBackground();\n  } else {\n    setTimeout(function () {\n      return fullCycle(box1);\n    }, 500);\n    setTimeout(function () {\n      return fullCycle(box2);\n    }, 1000);\n    setTimeout(function () {\n      return fullCycle(box3);\n    }, 1500);\n    setTimeout(function () {\n      return fullCycle(box4);\n    }, 2000);\n    setTimeout(function () {\n      return fullCycle(box5);\n    }, 2500);\n    setTimeout(function () {\n      return fullCycle(box6);\n    }, 3000);\n    changeBackground();\n  }\n} // Start Carousel\n\n\nvar start = function start() {\n  carousel = setInterval(cycleImages, 10000);\n}; // Stop Carousel\n\n\nvar stop = function stop() {\n  clearInterval(carousel);\n}; // Convert Grid To Columns\n\n\nvar makeColumns = function makeColumns() {\n  grid.style.gridTemplateColumns = \"repeat(6, 1fr)\";\n  box1.style.gridColumn = \"1/2\";\n  box1.style.gridRow = \"1/3\";\n  box2.style.gridColumn = \"2/3\";\n  box2.style.gridRow = \"1/3\";\n  box3.style.gridColumn = \"3/4\";\n  box3.style.gridRow = \"1/3\";\n  box4.style.gridColumn = \"4/5\";\n  box4.style.gridRow = \"1/3\";\n  box5.style.gridColumn = \"5/6\";\n  box5.style.gridRow = \"1/3\";\n  box6.style.gridColumn = \"6/7\";\n  box6.style.gridRow = \"1/3\";\n  box6.style.display = \"block\";\n}; // Convert Grid To Boxes\n\n\nvar makeBoxes = function makeBoxes() {\n  grid.style.gridTemplateColumns = \"repeat(6, 1fr)\";\n  box1.style.gridColumn = \"1/3\";\n  box1.style.gridRow = \"1/2\";\n  box2.style.gridColumn = \"3/5\";\n  box2.style.gridRow = \"1/2\";\n  box3.style.gridColumn = \"5/7\";\n  box3.style.gridRow = \"1/2\";\n  box4.style.gridColumn = \"1/3\";\n  box4.style.gridRow = \"2/3\";\n  box5.style.gridColumn = \"3/5\";\n  box5.style.gridRow = \"2/3\";\n  box6.style.gridColumn = \"5/7\";\n  box6.style.gridRow = \"2/3\";\n  box6.style.display = \"block\";\n}; // Convert Grid To Boxes\n\n\nvar makeMixed = function makeMixed() {\n  grid.style.gridTemplateColumns = \"repeat(5, 1fr)\";\n  box1.style.gridColumn = \"1/2\";\n  box1.style.gridRow = \"1/2\";\n  box2.style.gridColumn = \"1/3\";\n  box2.style.gridRow = \"1/3\";\n  box3.style.gridColumn = \"3/4\";\n  box3.style.gridRow = \"1/3\";\n  box4.style.gridColumn = \"4/6\";\n  box4.style.gridRow = \"1/3\";\n  box5.style.gridColumn = \"5/6\";\n  box5.style.gridRow = \"2/3\";\n  box6.style.display = \"none\";\n}; // Shuffle Grid Based On Current State\n\n\nvar shuffle = function shuffle() {\n  // console.log(\"clicked\");\n  stop();\n\n  switch (shuffleState) {\n    case \"mixed\":\n      makeColumns();\n      shuffleState = \"columns\";\n      break;\n\n    case \"columns\":\n      makeBoxes();\n      shuffleState = \"boxes\";\n      break;\n\n    case \"boxes\":\n      makeMixed();\n      shuffleState = \"mixed\";\n      break;\n\n    default:\n      makeMixed();\n      shuffleState = \"mixed\";\n  }\n\n  cycleImages();\n  start();\n}; // Load Images On Page Load\n\n\nloadStartImages();","map":{"version":3,"sources":["C:\\Users\\tonyw\\Dropbox\\CloudMash\\Class\\Projects\\SigmaVX.github.io\\src\\components\\Carousel\\logic.js"],"names":["colors","images","randomImages","sort","a","b","Math","random","grid","document","getElementById","box1","box2","box3","box4","box5","box6","boxArray","count","carousel","shuffleState","playState","loadStartImages","i","length","style","backgroundImage","fadeOut","box","setAttribute","updateImages","visibility","updateClass","changeBackground","colorPick","floor","background","fullCycle","setTimeout","cycleImages","start","setInterval","stop","clearInterval","makeColumns","gridTemplateColumns","gridColumn","gridRow","display","makeBoxes","makeMixed","shuffle"],"mappings":"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","sourcesContent":["// Background Color Options\r\nconst colors = [\"#413075\",\"#2E4172\",\"#582A72\",\"#AA9739\",\"#2E4172\",\"#A64050\",\"#A7AE43\",\"#3B3B7B\",\"#ff99ff\", \"#008060\", \"#ff944d\",\"#cc5200\", \"#ff9900\", \"#8080ff\", \"#996633\", \"#800000\",\"#0099cc\"];\r\n\r\n\r\n// Our Images - Nature\r\nconst images=[\"./images/1.jpg\", \"./images/2.jpg\", \"./images/3.jpg\", \"./images/4.jpg\", \"./images/5.jpg\", \"./images/6.jpg\", \"./images/7.jpg\", \"./images/8.jpg\", \"./images/9.jpg\",\"./images/10.jpg\", \"./images/11.jpg\",\"./images/12.jpg\", \"./images/13.jpg\",\"./images/14.jpg\", \"./images/15.jpg\",\"./images/16.jpg\", \"./images/17.jpg\",\"./images/18.jpg\", \"./images/19.jpg\",\"./images/20.jpg\", \"./images/21.jpg\",\"./images/22.jpg\", \"./images/23.jpg\", \"./images/24.jpg\", \"./images/25.jpg\",\"./images/26.jpg\", \"./images/27.jpg\",\"./images/28.jpg\", \"./images/29.jpg\",\"./images/30.jpg\"]\r\n\r\n// Randomized Array Of Images\r\nlet randomImages = images.sort(function(a, b){return 0.5 - Math.random()})\r\n\r\n// Ser Variables for DOM Elements\r\nconst grid=document.getElementById(\"grid\");\r\nconst box1=document.getElementById(\"box-1\");\r\nconst box2=document.getElementById(\"box-2\");\r\nconst box3=document.getElementById(\"box-3\");\r\nconst box4=document.getElementById(\"box-4\");\r\nconst box5=document.getElementById(\"box-5\");\r\nconst box6=document.getElementById(\"box-6\");\r\n\r\n// Image Array (For Loops)\r\nconst boxArray = [box1, box2, box3, box4, box5, box6];\r\n\r\n// Track Our Index For Images\r\nlet count = 0;\r\n\r\n// Store Our Interval (So We Can Have Access)\r\nlet carousel;\r\n\r\n// Store Grid & Play State\r\nlet shuffleState = \"mixed\";\r\nlet playState = \"paused\";\r\n\r\n// ============================================================================================================\r\n// There is a DRY way to do this code with a loop but it does not achieve the stagered effect I was looking for\r\n// ============================================================================================================\r\n\r\n// Set Initial Images\r\nconst loadStartImages = () =>{\r\n    for( let i=0; i<boxArray.length; i++){\r\n        boxArray[i].style.backgroundImage = `url(${randomImages[count + i]})`;\r\n        // console.log(count);\r\n        count++\r\n    }\r\n}\r\n\r\n// Fade Out Current Images\r\nconst fadeOut = (box) => {\r\n    box.setAttribute(\"class\", \"box fadeOut\");\r\n}\r\n\r\n// Change Image Source While Hidden\r\nconst updateImages = (box) => {\r\n    box.style.visibility = \"hidden\";\r\n    box.style.backgroundImage = `url(${randomImages[count]})`;\r\n    // console.log(`Image Number: ${count}`);\r\n    count++;\r\n    // console.log(`Updated Count: ${count}`);\r\n\r\n}\r\n\r\n// Add Class For Animation\r\nconst updateClass = (box) => {\r\n    box.setAttribute(\"class\", \"box scaleIn\");\r\n    box.style.visibility = \"visible\";\r\n}\r\n\r\n// Change Background Color\r\nconst changeBackground = () => {\r\n    let colorPick = Math.floor(Math.random() * colors.length);\r\n    // console.log(`Color Picked: ${colors[colorPick]}`);\r\n    grid.style.background = colors[colorPick];\r\n}\r\n\r\n// Set Timers To Replace Images\r\nconst fullCycle = (box) => {\r\n    setTimeout(()=>fadeOut(box), 0);\r\n    setTimeout(()=>updateImages(box), 3000);\r\n    setTimeout(()=>updateClass(box), 4000);\r\n}\r\n\r\n// Update Images On A Staggered Basis\r\nfunction cycleImages() {\r\n\r\n    // Check If All Images Are Used & Reshuffle\r\n    if(count>=randomImages.length-1){\r\n        randomImages = images.sort(function(a, b){return 0.5 - Math.random()})\r\n        count=0;\r\n        setTimeout(()=>fullCycle(box1), 500);\r\n        setTimeout(()=>fullCycle(box2), 1000);\r\n        setTimeout(()=>fullCycle(box3), 1500);\r\n        setTimeout(()=>fullCycle(box4), 2000);\r\n        setTimeout(()=>fullCycle(box5), 2500);\r\n        setTimeout(()=>fullCycle(box6), 3000);\r\n        changeBackground();\r\n    } else {\r\n        setTimeout(()=>fullCycle(box1), 500);\r\n        setTimeout(()=>fullCycle(box2), 1000);\r\n        setTimeout(()=>fullCycle(box3), 1500);\r\n        setTimeout(()=>fullCycle(box4), 2000);\r\n        setTimeout(()=>fullCycle(box5), 2500);\r\n        setTimeout(()=>fullCycle(box6), 3000);\r\n        changeBackground();\r\n    }\r\n}\r\n\r\n// Start Carousel\r\nconst start = () => {\r\n    carousel = setInterval(cycleImages, 10000);\r\n}\r\n\r\n// Stop Carousel\r\nconst stop = () => {\r\n    clearInterval(carousel);\r\n}\r\n\r\n// Convert Grid To Columns\r\nconst makeColumns = () =>{\r\n    grid.style.gridTemplateColumns=\"repeat(6, 1fr)\";\r\n    box1.style.gridColumn=\"1/2\";\r\n    box1.style.gridRow=\"1/3\";\r\n    box2.style.gridColumn=\"2/3\";\r\n    box2.style.gridRow=\"1/3\";\r\n    box3.style.gridColumn=\"3/4\";\r\n    box3.style.gridRow=\"1/3\";\r\n    box4.style.gridColumn=\"4/5\";\r\n    box4.style.gridRow=\"1/3\";\r\n    box5.style.gridColumn=\"5/6\";\r\n    box5.style.gridRow=\"1/3\";\r\n    box6.style.gridColumn=\"6/7\";\r\n    box6.style.gridRow=\"1/3\";\r\n    box6.style.display=\"block\";\r\n}\r\n\r\n// Convert Grid To Boxes\r\nconst makeBoxes = () => {\r\n    grid.style.gridTemplateColumns=\"repeat(6, 1fr)\";\r\n    box1.style.gridColumn=\"1/3\";\r\n    box1.style.gridRow=\"1/2\";\r\n    box2.style.gridColumn=\"3/5\";\r\n    box2.style.gridRow=\"1/2\";\r\n    box3.style.gridColumn=\"5/7\";\r\n    box3.style.gridRow=\"1/2\";\r\n    box4.style.gridColumn=\"1/3\";\r\n    box4.style.gridRow=\"2/3\";\r\n    box5.style.gridColumn=\"3/5\";\r\n    box5.style.gridRow=\"2/3\";\r\n    box6.style.gridColumn=\"5/7\";\r\n    box6.style.gridRow=\"2/3\";\r\n    box6.style.display=\"block\";\r\n}\r\n\r\n// Convert Grid To Boxes\r\nconst makeMixed = () => {\r\n    grid.style.gridTemplateColumns=\"repeat(5, 1fr)\";\r\n    box1.style.gridColumn=\"1/2\";\r\n    box1.style.gridRow=\"1/2\";\r\n    box2.style.gridColumn=\"1/3\";\r\n    box2.style.gridRow=\"1/3\";\r\n    box3.style.gridColumn=\"3/4\";\r\n    box3.style.gridRow=\"1/3\";\r\n    box4.style.gridColumn=\"4/6\";\r\n    box4.style.gridRow=\"1/3\";\r\n    box5.style.gridColumn=\"5/6\";\r\n    box5.style.gridRow=\"2/3\";\r\n    box6.style.display=\"none\";\r\n}\r\n\r\n// Shuffle Grid Based On Current State\r\nconst shuffle = ()=>{\r\n    // console.log(\"clicked\");\r\n    stop();\r\n\r\n    switch(shuffleState) {\r\n        case \"mixed\": \r\n            makeColumns();\r\n            shuffleState=\"columns\";\r\n            break;\r\n        case \"columns\":\r\n            makeBoxes();\r\n            shuffleState=\"boxes\";\r\n            break;\r\n        case \"boxes\":\r\n            makeMixed();\r\n            shuffleState=\"mixed\";\r\n            break;\r\n        default:\r\n            makeMixed();\r\n            shuffleState=\"mixed\";\r\n    }\r\n\r\n    cycleImages();\r\n    start();\r\n}\r\n\r\n\r\n// Load Images On Page Load\r\nloadStartImages();"]},"metadata":{},"sourceType":"module"}