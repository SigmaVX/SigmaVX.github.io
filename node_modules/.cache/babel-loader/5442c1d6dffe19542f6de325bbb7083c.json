{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonyw\\\\Dropbox\\\\CloudMash\\\\Class\\\\Projects\\\\SigmaVX.github.io\\\\src\\\\components\\\\Navigation\\\\SideDrawer\\\\SideDrawer.js\";\nimport React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport styles from \"./SideDrawer.module.css\";\n\nvar SideDrawer = function SideDrawer(props) {\n  // Checks props to determine if drawer should be open or closed\n  var drawerClasses = [styles.SideDrawer, styles.Close];\n\n  if (props.openDrawer) {\n    drawerClasses = [styles.SideDrawer, styles.Open];\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Backdrop, {\n    show: props.openDrawer,\n    clicked: props.closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: drawerClasses.join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.LogoWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(NavigationItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n};\n\nexport default SideDrawer;","map":{"version":3,"sources":["C:\\Users\\tonyw\\Dropbox\\CloudMash\\Class\\Projects\\SigmaVX.github.io\\src\\components\\Navigation\\SideDrawer\\SideDrawer.js"],"names":["React","Logo","NavigationItems","Backdrop","styles","SideDrawer","props","drawerClasses","Close","openDrawer","Open","closeDrawer","join","LogoWrap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAE1B;AACA,MAAIC,aAAa,GAAG,CAACH,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACI,KAA3B,CAApB;;AACA,MAAGF,KAAK,CAACG,UAAT,EAAoB;AAChBF,IAAAA,aAAa,GAAG,CAACH,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACM,IAA3B,CAAhB;AACH;;AAGD,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,KAAK,CAACG,UAAtB;AAAkC,IAAA,OAAO,EAAEH,KAAK,CAACK,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAEJ,aAAa,CAACK,IAAd,CAAmB,GAAnB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAFJ,CADJ;AAaH,CAtBD;;AAwBA,eAAeR,UAAf","sourcesContent":["import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport styles from \"./SideDrawer.module.css\";\n\nconst SideDrawer = (props) => {\n    \n    // Checks props to determine if drawer should be open or closed\n    let drawerClasses = [styles.SideDrawer, styles.Close];\n    if(props.openDrawer){\n        drawerClasses = [styles.SideDrawer, styles.Open];\n    }\n\n\n    return(\n        <React.Fragment>\n            <Backdrop show={props.openDrawer} clicked={props.closeDrawer}/>\n            <div className={drawerClasses.join(\" \")}>\n                <div className={styles.LogoWrap}>\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems/>\n                </nav>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default SideDrawer;"]},"metadata":{},"sourceType":"module"}